{"version":3,"sources":["src/app.js","src/environment.js","src/main.js","src/resources/index.js"],"names":["App","message","xor","str","total","tempDigit","i","length","isNaN","charAt","Number","alert","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","config"],"mappings":";;;;;;;;;;;;;MAAaA,cAAAA;AACX,mBAAc;AAAA;;AACZ,WAAKC,OAAL,GAAe,gBAAf;AACD;;kBAEDC,mBAAIC,KAAI;AACN,UAAIC,KAAJ;AACA,UAAIC,YAAU,EAAd;AACAF,YAAIA,MAAI,GAAR;AACA,WAAI,IAAIG,IAAI,CAAZ,EAAeA,IAAIH,IAAII,MAAvB,EAA+BD,GAA/B,EAAmC;AACjC,YAAG,CAACE,MAAML,IAAIM,MAAJ,CAAWH,CAAX,CAAN,CAAD,GAAwBH,IAAIM,MAAJ,CAAWH,CAAX,KAAe,GAA1C,EAA8C;AAC5CD,uBAAWF,IAAIM,MAAJ,CAAWH,CAAX,CAAX;AACD,SAFD,MAGI;AACF,cAAGF,SAAO,IAAV,EAAe;AACbA,qBAAOM,OAAOL,SAAP,CAAP;AACD,WAFD,MAGI;AACFD,oBAAMM,OAAOL,SAAP,CAAN;AACD;AACDA,sBAAU,EAAV;AACD;AACF;AACDM,YAAMP,KAAN;AACD;;;;;;;;;;;oBCxBY;AACbQ,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCECC,YAAAA;;;;;;;;;;AAAT,WAASA,SAAT,CAAmBC,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYN,KAAhB,EAAuB;AACrBG,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYN,OAAhB,EAAyB;AACvBE,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UChBeT,YAAAA;AAAT,WAASA,SAAT,CAAmBU,MAAnB,EAA2B,CAEjC","file":"app-bundle.js","sourcesContent":["export class App {\n  constructor() {\n    this.message = 'XOR CALCULATOR';\n  }\n\n  xor(str){\n    var total;\n    var tempDigit='';\n    str=str+\" \";\n    for(var i = 0; i < str.length; i++){\n      if(!isNaN(str.charAt(i)) & str.charAt(i)!=\" \"){\n        tempDigit+=str.charAt(i);\n      }\n      else{\n        if(total!=null){\n          total^=Number(tempDigit);\n        }\n        else{\n          total=Number(tempDigit);\n        }\n        tempDigit='';\n      }\n    }\n    alert(total);\n  }\n\n\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":".."}